An error occurred while executing the following cell:
------------------
"""
Fits Bernoulli mixture model for mnist digits using em algorithm
Author: Meduri Venkata Shivaditya, Aleyna Kara(@karalleyna)
"""


from jax.random import PRNGKey, randint

try:
    import tensorflow as tf
except:
    %pip install tensorflow
    import tensorflow as tf
from probml_utils.mix_bernoulli_lib import BMM


def mnist_data(n_obs, rng_key=None):
    """
    Downloads data from tensorflow datasets
    Parameters
    ----------
    n_obs : int
        Number of digits randomly chosen from mnist
    rng_key : array
        Random key of shape (2,) and dtype uint32
    Returns
    -------
    * array((n_obs, 784))
        Dataset
    """
    rng_key = PRNGKey(0) if rng_key is None else rng_key

    (x_train, y_train), _ = tf.keras.datasets.mnist.load_data()
    x = (x_train > 0).astype("int")  # Converting to binary
    dataset_size = x.shape[0]

    perm = randint(rng_key, minval=0, maxval=dataset_size, shape=((n_obs,)))
    x_train = x[perm]
    x_train = x_train.reshape((n_obs, 784))

    return x_train


def main():
    n_obs = 1000
    observations = mnist_data(n_obs)  # subsample the MNIST dataset
    n_vars = len(observations[0])
    K, num_of_iters = 12, 10
    n_row, n_col = 3, 4
    bmm = BMM(K, n_vars)
    _ = bmm.fit_em(observations, num_of_iters=num_of_iters)
    bmm.plot(n_row, n_col, "bmm_em_mnist")


if __name__ == "__main__":
    main()
------------------

---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Input In [1], in <cell line: 14>()
     12     get_ipython().run_line_magic('pip', 'install tensorflow')
     13     import tensorflow as tf
---> 14 from probml_utils.mix_bernoulli_lib import BMM
     17 def mnist_data(n_obs, rng_key=None):
     18     """
     19     Downloads data from tensorflow datasets
     20     Parameters
   (...)
     29         Dataset
     30     """

File /usr/local/lib/python3.9/dist-packages/probml_utils/mix_bernoulli_lib.py:12, in <module>
      9 from jax.nn import softmax
     10 from jax.experimental import optimizers
---> 12 import distrax
     13 from distrax._src.utils import jittable
     15 from .mixture_lib import MixtureSameFamily

File /usr/local/lib/python3.9/dist-packages/distrax/__init__.py:20, in <module>
     18 from distrax._src.bijectors.bijector import Bijector
     19 from distrax._src.bijectors.bijector import BijectorLike
---> 20 from distrax._src.bijectors.block import Block
     21 from distrax._src.bijectors.chain import Chain
     22 from distrax._src.bijectors.gumbel_cdf import GumbelCDF

File /usr/local/lib/python3.9/dist-packages/distrax/_src/bijectors/block.py:20, in <module>
     17 from typing import Tuple
     19 from distrax._src.bijectors import bijector as base
---> 20 from distrax._src.utils import conversion
     21 from distrax._src.utils import math
     23 Array = base.Array

File /usr/local/lib/python3.9/dist-packages/distrax/_src/utils/conversion.py:19, in <module>
     15 """Utility functions for conversion between different types."""
     17 from typing import Optional, Union
---> 19 import chex
     20 from distrax._src.bijectors import bijector
     21 from distrax._src.bijectors import bijector_from_tfp

File /usr/local/lib/python3.9/dist-packages/chex/__init__.py:17, in <module>
      1 # Copyright 2020 DeepMind Technologies Limited. All Rights Reserved.
      2 #
      3 # Licensed under the Apache License, Version 2.0 (the "License");
   (...)
     13 # limitations under the License.
     14 # ==============================================================================
     15 """Chex: Testing made fun, in JAX!"""
---> 17 from chex._src.asserts import assert_axis_dimension
     18 from chex._src.asserts import assert_axis_dimension_comparator
     19 from chex._src.asserts import assert_axis_dimension_gt

File /usr/local/lib/python3.9/dist-packages/chex/_src/asserts.py:26, in <module>
     23 import unittest
     24 from unittest import mock
---> 26 from chex._src import asserts_internal as _ai
     27 from chex._src import pytypes
     28 import jax

File /usr/local/lib/python3.9/dist-packages/chex/_src/asserts_internal.py:32, in <module>
     29 from typing import Any, Sequence, Union, Callable, Optional, Set, Tuple, Type
     31 from absl import logging
---> 32 from chex._src import pytypes
     33 import jax
     34 import jax.numpy as jnp

File /usr/local/lib/python3.9/dist-packages/chex/_src/pytypes.py:40, in <module>
     37 PyTreeDef = type(jax.tree_structure(None))
     38 Shape = Tuple[int, ...]
---> 40 CpuDevice = jax.lib.xla_extension.CpuDevice
     41 GpuDevice = jax.lib.xla_extension.GpuDevice
     42 TpuDevice = jax.lib.xla_extension.TpuDevice

AttributeError: module 'jaxlib.xla_extension' has no attribute 'CpuDevice'
AttributeError: module 'jaxlib.xla_extension' has no attribute 'CpuDevice'
